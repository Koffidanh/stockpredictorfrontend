{"ast":null,"code":"var _jsxFileName = \"/Users/koffidanhounsrou/Desktop/stockPredictorReact/stockpredictor/client/src/Contexts/AuthContent/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth, provider } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\n// import firebase from \"firebase/app\";\nimport firebase from \"firebase/compat/app\";\n\n// import { API } from \"../../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const delay = 5;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    setTimeout(() => setShow(\"Time has passed\"), 10000);\n    console.log(\"TIMER: \" + show);\n  }, [show]);\n  const history = useHistory();\n  async function signupWithGoogle() {\n    auth.signInWithPopup(provider).then(result => result.additionalUserInfo.isNewUser ? result : false).then(result => {\n      if (result) {\n        const newUser = {\n          userName: result.user.displayName,\n          profileImage: [],\n          uid: result.user.uid,\n          hasPassword: false\n        };\n        console.log(newUser);\n        //   API.saveUser(newUser);\n      } else {\n        console.log(\"I'm Sorry, I'm afraid I can't do that.\");\n      }\n    });\n  }\n  function signup(name, email, password) {\n    return auth.createUserWithEmailAndPassword(email, password).then(result => result.additionalUserInfo.isNewUser ? result : false).then(result => {\n      if (result) {\n        result.user.updateProfile({\n          displayName: name\n        });\n        result.user.sendEmailVerification();\n        const newUser = {\n          userName: name,\n          profileImage: [],\n          uid: result.user.uid,\n          hasPassword: true\n        };\n        console.log(newUser);\n        //   API.saveUser(newUser);\n      } else {\n        console.log(\"I'm Sorry, I'm afraid I can't do that.\");\n      }\n    });\n  }\n  async function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n  function logout() {\n    return auth.signOut();\n  }\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n  function updatePassword(password) {\n    console.log(\"update password function\");\n    return currentUser.updatePassword(password);\n  }\n  function updatePhotoURL(image) {\n    return currentUser.updateProfile({\n      photoURL: image\n    });\n  }\n  function updateDisplayName(name) {\n    return currentUser.updateProfile({\n      displayName: name\n    });\n  }\n  const reauthenticate = currentPassword => {\n    const user = firebase.auth().currentUser;\n    const cred = firebase.auth.EmailAuthProvider.credential(user.email, currentPassword);\n    return user.reauthenticateWithCredential(cred);\n  };\n  const changePassword = async (oldPassword, newPassword) => {\n    const user = firebase.auth().currentUser;\n    try {\n      // reauthenticating\n      await reauthenticate(oldPassword);\n      // updating password\n      await user.updatePassword(newPassword);\n    } catch (err) {\n      console.log(err);\n      // logout()\n    }\n  };\n  function deleteAccount() {\n    console.log(\"delete function\");\n    // const auth = getAuth();\n    // const user = auth.currentUser;\n\n    // deleteUser(user).then(() => {\n    //   // User deleted.\n    // }).catch((error) => {\n    //   // An error ocurred\n    //   // ...\n    // });\n\n    const user = firebase.auth().currentUser;\n    user.delete().then(() => {\n      // User deleted.\n    }).catch(error => {\n      // alert(error)\n      // An error ocurred\n      // ...\n    });\n  }\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    updatePhotoURL,\n    signupWithGoogle,\n    changePassword,\n    reauthenticate,\n    updateDisplayName,\n    deleteAccount\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"D0bpWvWiKgsJEmjH4bdmx7c6A1o=\", false, function () {\n  return [useHistory];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","auth","provider","useHistory","firebase","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","delay","currentUser","setCurrentUser","loading","setLoading","show","setShow","setTimeout","console","log","history","signupWithGoogle","signInWithPopup","then","result","additionalUserInfo","isNewUser","newUser","userName","user","displayName","profileImage","uid","hasPassword","signup","name","email","password","createUserWithEmailAndPassword","updateProfile","sendEmailVerification","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updatePhotoURL","image","photoURL","updateDisplayName","reauthenticate","currentPassword","cred","EmailAuthProvider","credential","reauthenticateWithCredential","changePassword","oldPassword","newPassword","err","deleteAccount","delete","catch","error","unsubscribe","onAuthStateChanged","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koffidanhounsrou/Desktop/stockPredictorReact/stockpredictor/client/src/Contexts/AuthContent/index.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, provider } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\n// import firebase from \"firebase/app\";\nimport firebase from \"firebase/compat/app\";\n\n// import { API } from \"../../utils/API\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const delay = 5;\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => setShow(\"Time has passed\"), 10000);\n    console.log(\"TIMER: \" + show);\n  }, [show]);\n\n  const history = useHistory();\n\n  async function signupWithGoogle() {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => (result.additionalUserInfo.isNewUser ? result : false))\n      .then((result) => {\n        if (result) {\n          const newUser = {\n            userName: result.user.displayName,\n            profileImage: [],\n            uid: result.user.uid,\n            hasPassword: false,\n          };\n\n          console.log(newUser);\n          //   API.saveUser(newUser);\n        } else {\n          console.log(\"I'm Sorry, I'm afraid I can't do that.\");\n        }\n      });\n  }\n\n  function signup(name, email, password) {\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => (result.additionalUserInfo.isNewUser ? result : false))\n      .then((result) => {\n        if (result) {\n          result.user.updateProfile({ displayName: name });\n          result.user.sendEmailVerification();\n\n          const newUser = {\n            userName: name,\n            profileImage: [],\n            uid: result.user.uid,\n            hasPassword: true,\n          };\n\n          console.log(newUser);\n          //   API.saveUser(newUser);\n        } else {\n          console.log(\"I'm Sorry, I'm afraid I can't do that.\");\n        }\n      });\n  }\n\n  async function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    console.log(\"update password function\");\n    return currentUser.updatePassword(password);\n  }\n\n  function updatePhotoURL(image) {\n    return currentUser.updateProfile({ photoURL: image });\n  }\n\n  function updateDisplayName(name) {\n    return currentUser.updateProfile({ displayName: name });\n  }\n\n  const reauthenticate = (currentPassword) => {\n    const user = firebase.auth().currentUser;\n    const cred = firebase.auth.EmailAuthProvider.credential(\n      user.email,\n      currentPassword\n    );\n    return user.reauthenticateWithCredential(cred);\n  };\n\n  const changePassword = async (oldPassword, newPassword) => {\n    const user = firebase.auth().currentUser;\n    try {\n      // reauthenticating\n      await reauthenticate(oldPassword);\n      // updating password\n      await user.updatePassword(newPassword);\n    } catch (err) {\n      console.log(err);\n      // logout()\n    }\n  };\n\n  function deleteAccount() {\n    console.log(\"delete function\");\n    // const auth = getAuth();\n    // const user = auth.currentUser;\n\n    // deleteUser(user).then(() => {\n    //   // User deleted.\n    // }).catch((error) => {\n    //   // An error ocurred\n    //   // ...\n    // });\n\n    const user = firebase.auth().currentUser;\n\n    user\n      .delete()\n      .then(() => {\n        // User deleted.\n      })\n      .catch((error) => {\n        // alert(error)\n        // An error ocurred\n        // ...\n      });\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n    updatePhotoURL,\n    signupWithGoogle,\n    changePassword,\n    reauthenticate,\n    updateDisplayName,\n    deleteAccount,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}