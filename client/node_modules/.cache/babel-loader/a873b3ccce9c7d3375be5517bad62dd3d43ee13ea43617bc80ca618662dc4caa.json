{"ast":null,"code":"var _jsxFileName = \"/Users/koffidanhounsrou/Desktop/stockPredictorReact/stockpredictor/client/src/Contexts/AuthContent/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth, provider } from \"../../firebase\";\nimport firebase from \"firebase/compat/app\";\n// import { API } from \"../../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const signupWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(provider);\n      if (result.additionalUserInfo.isNewUser) {\n        const newUser = {\n          userName: result.user.displayName,\n          profileImage: [],\n          // Consider updating to include the profile image if available\n          uid: result.user.uid,\n          hasPassword: false\n        };\n        console.log(newUser);\n        // API.saveUser(newUser); // Uncomment if you want to save new user details\n      }\n    } catch (error) {\n      console.error(\"Error during Google sign-in:\", error);\n    }\n  };\n  const value = {\n    currentUser,\n    login: (email, password) => auth.signInWithEmailAndPassword(email, password),\n    signup: (name, email, password) => auth.createUserWithEmailAndPassword(email, password).then(result => {\n      if (result.additionalUserInfo.isNewUser) {\n        return result.user.updateProfile({\n          displayName: name\n        });\n      }\n      return result;\n    }),\n    signupWithGoogle,\n    logout: () => auth.signOut(),\n    resetPassword: email => auth.sendPasswordResetEmail(email),\n    updateEmail: email => currentUser.updateEmail(email),\n    updatePassword: password => currentUser.updatePassword(password),\n    updatePhotoURL: image => currentUser.updateProfile({\n      photoURL: image\n    }),\n    updateDisplayName: name => currentUser.updateProfile({\n      displayName: name\n    }),\n    changePassword: async (oldPassword, newPassword) => {\n      const user = firebase.auth().currentUser;\n      const cred = firebase.auth.EmailAuthProvider.credential(user.email, oldPassword);\n      await user.reauthenticateWithCredential(cred);\n      await user.updatePassword(newPassword);\n    },\n    deleteAccount: async () => {\n      const user = firebase.auth().currentUser;\n      await user.delete();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","auth","provider","firebase","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","unsubscribe","onAuthStateChanged","user","signupWithGoogle","result","signInWithPopup","additionalUserInfo","isNewUser","newUser","userName","displayName","profileImage","uid","hasPassword","console","log","error","value","login","email","password","signInWithEmailAndPassword","signup","name","createUserWithEmailAndPassword","then","updateProfile","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updatePhotoURL","image","photoURL","updateDisplayName","changePassword","oldPassword","newPassword","cred","EmailAuthProvider","credential","reauthenticateWithCredential","deleteAccount","delete","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koffidanhounsrou/Desktop/stockPredictorReact/stockpredictor/client/src/Contexts/AuthContent/index.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, provider } from \"../../firebase\";\nimport firebase from \"firebase/compat/app\";\n// import { API } from \"../../utils/API\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const signupWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(provider);\n      if (result.additionalUserInfo.isNewUser) {\n        const newUser = {\n          userName: result.user.displayName,\n          profileImage: [], // Consider updating to include the profile image if available\n          uid: result.user.uid,\n          hasPassword: false,\n        };\n\n        console.log(newUser);\n        // API.saveUser(newUser); // Uncomment if you want to save new user details\n      }\n    } catch (error) {\n      console.error(\"Error during Google sign-in:\", error);\n    }\n  };\n\n  const value = {\n    currentUser,\n    login: (email, password) =>\n      auth.signInWithEmailAndPassword(email, password),\n    signup: (name, email, password) =>\n      auth.createUserWithEmailAndPassword(email, password).then((result) => {\n        if (result.additionalUserInfo.isNewUser) {\n          return result.user.updateProfile({ displayName: name });\n        }\n        return result;\n      }),\n    signupWithGoogle,\n    logout: () => auth.signOut(),\n    resetPassword: (email) => auth.sendPasswordResetEmail(email),\n    updateEmail: (email) => currentUser.updateEmail(email),\n    updatePassword: (password) => currentUser.updatePassword(password),\n    updatePhotoURL: (image) => currentUser.updateProfile({ photoURL: image }),\n    updateDisplayName: (name) =>\n      currentUser.updateProfile({ displayName: name }),\n    changePassword: async (oldPassword, newPassword) => {\n      const user = firebase.auth().currentUser;\n      const cred = firebase.auth.EmailAuthProvider.credential(\n        user.email,\n        oldPassword\n      );\n      await user.reauthenticateWithCredential(cred);\n      await user.updatePassword(newPassword);\n    },\n    deleteAccount: async () => {\n      const user = firebase.auth().currentUser;\n      await user.delete();\n    },\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}