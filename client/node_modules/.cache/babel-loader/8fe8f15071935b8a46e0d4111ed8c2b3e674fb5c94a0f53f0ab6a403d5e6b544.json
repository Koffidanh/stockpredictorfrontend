{"ast":null,"code":"var _jsxFileName = \"/Users/koffidanhounsrou/Desktop/stockPredictorReact/stockpredictor/client/src/Contexts/AuthContent/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth, provider } from \"../../firebase\";\nimport firebase from \"firebase/compat/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login: (email, password) => auth.signInWithEmailAndPassword(email, password),\n    signup: (name, email, password) => auth.createUserWithEmailAndPassword(email, password).then(result => {\n      if (result.additionalUserInfo.isNewUser) {\n        return result.user.updateProfile({\n          displayName: name\n        });\n      }\n      return result;\n    }),\n    signupWithGoogle: () => auth.signInWithPopup(provider),\n    logout: () => auth.signOut(),\n    resetPassword: email => auth.sendPasswordResetEmail(email),\n    updateEmail: email => currentUser.updateEmail(email),\n    updatePassword: password => currentUser.updatePassword(password),\n    updatePhotoURL: image => currentUser.updateProfile({\n      photoURL: image\n    }),\n    updateDisplayName: name => currentUser.updateProfile({\n      displayName: name\n    }),\n    changePassword: async (oldPassword, newPassword) => {\n      const user = firebase.auth().currentUser;\n      const cred = firebase.auth.EmailAuthProvider.credential(user.email, oldPassword);\n      await user.reauthenticateWithCredential(cred);\n      await user.updatePassword(newPassword);\n    },\n    deleteAccount: () => {\n      const user = firebase.auth().currentUser;\n      return user.delete();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","auth","provider","firebase","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","unsubscribe","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","name","createUserWithEmailAndPassword","then","result","additionalUserInfo","isNewUser","updateProfile","displayName","signupWithGoogle","signInWithPopup","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","updatePhotoURL","image","photoURL","updateDisplayName","changePassword","oldPassword","newPassword","cred","EmailAuthProvider","credential","reauthenticateWithCredential","deleteAccount","delete","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/koffidanhounsrou/Desktop/stockPredictorReact/stockpredictor/client/src/Contexts/AuthContent/index.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, provider } from \"../../firebase\";\nimport firebase from \"firebase/compat/app\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login: (email, password) =>\n      auth.signInWithEmailAndPassword(email, password),\n    signup: (name, email, password) =>\n      auth.createUserWithEmailAndPassword(email, password).then((result) => {\n        if (result.additionalUserInfo.isNewUser) {\n          return result.user.updateProfile({ displayName: name });\n        }\n        return result;\n      }),\n    signupWithGoogle: () => auth.signInWithPopup(provider),\n    logout: () => auth.signOut(),\n    resetPassword: (email) => auth.sendPasswordResetEmail(email),\n    updateEmail: (email) => currentUser.updateEmail(email),\n    updatePassword: (password) => currentUser.updatePassword(password),\n    updatePhotoURL: (image) => currentUser.updateProfile({ photoURL: image }),\n    updateDisplayName: (name) =>\n      currentUser.updateProfile({ displayName: name }),\n    changePassword: async (oldPassword, newPassword) => {\n      const user = firebase.auth().currentUser;\n      const cred = firebase.auth.EmailAuthProvider.credential(\n        user.email,\n        oldPassword\n      );\n      await user.reauthenticateWithCredential(cred);\n      await user.updatePassword(newPassword);\n    },\n    deleteAccount: () => {\n      const user = firebase.auth().currentUser;\n      return user.delete();\n    },\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}